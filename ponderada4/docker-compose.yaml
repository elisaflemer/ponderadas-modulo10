version: "3.8"

services:

  postgres:
      image: postgres:latest
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres 
        POSTGRES_DB: ponderada
      ports:
        - "5432:5432"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 10s
        timeout: 5s
        retries: 5

  wishlist:
    build: ./wishlist
    ports:
      - "8002:8002"
    environment:
      DATABASE_URL: "postgresql+asyncpg://postgres:postgres@postgres/ponderada"
      GATEWAY_URL: "http://gateway:80"
    depends_on:
      postgres:
        condition: service_healthy

  usuarios:
    build: ./usuarios
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: "postgresql+asyncpg://postgres:postgres@postgres/ponderada"
      GATEWAY_URL: "http://gateway:80"
    depends_on:
      postgres:
        condition: service_healthy

  produtos:
    build: ./produtos
    ports:
      - "8003:8003"
    environment:
      DATABASE_URL: "postgresql+asyncpg://postgres:postgres@postgres/ponderada"
      GATEWAY_URL: "http://gateway:80"
    depends_on:
      postgres:
        condition: service_healthy

  gateway:
    build: ./gateway
    ports:
      - "8000:80"
    depends_on: 
      - usuarios
      - postgres
      - wishlist
      - produtos

  # filebeat:
  #   build: ./filebeat/
  #   container_name: filebeat
  #   volumes:
  #     - ./logs:/src/logs
  #     - /var/lib/docker:/var/lib/docker:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   depends_on:
  #     - wishlist
  #     - elasticsearch
  #     - kibana
  #   network_mode: "host"

  # elasticsearch:
  #   build: ./elasticsearch/
  #   container_name: elasticsearch
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"

  # kibana:
  #   build: ./kibana/
  #   container_name: kibana
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch

volumes:
    elasticsearch_data:
        driver: local